set-option -g default-shell /bin/zsh

set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"
set -g xterm-keys on
set -g bell-action none
set -g set-clipboard on
set -sg escape-time 10

# swith on active session on session kill
set-option -g detach-on-destroy off

# iterm2 integration
set-option -g allow-passthrough on

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

# split panes
unbind '"'
bind v split-window -h -c "#{pane_current_path}"
unbind %
bind s split-window -v -c "#{pane_current_path}"
bind S choose-tree -Zs

# open new panes in current path
bind c new-window -c '#{pane_current_path}'

# toggle sync panes
bind e setw synchronize-panes

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on

# better copy mode mouse behavior for me
unbind -T copy-mode-vi MouseDragEnd1Pane
unbind -T root MouseDrag1Pane
# do not exit on copy
bind-key -T copy-mode-vi 'Enter' send-keys -X copy-pipe 

# Vim style pane selection
# Smart pane switching with awareness of Neovim splits.
bind-key -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if -F "#{@pane-is-vim}" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if -F "#{@pane-is-vim}" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if -F "#{@pane-is-vim}" 'send-keys C-l'  'select-pane -R'

# Smart pane resizing with awareness of Neovim splits.
bind-key -n M-h if -F "#{@pane-is-vim}" 'send-keys M-h' 'resize-pane -L 3'
bind-key -n M-j if -F "#{@pane-is-vim}" 'send-keys M-j' 'resize-pane -D 3'
bind-key -n M-k if -F "#{@pane-is-vim}" 'send-keys M-k' 'resize-pane -U 3'
bind-key -n M-l if -F "#{@pane-is-vim}" 'send-keys M-l' 'resize-pane -R 3'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Easier and faster switching between next/prev window
bind C-p previous-window
bind C-n next-window

# scrollback size
set -g history-limit 50000

# Increase tmux messages display duration from 750ms to 1s
set -g display-time 1000

# Focus events enabled for terminals that support them
set -g focus-events on

# Super useful when using "grouped sessions" and multi-monitor setup
# setw -g aggressive-resize on

# set first window to index 1 (not 0) to map more to the keyboard layout
set -g base-index 1
set -g pane-base-index 1

set -g renumber-windows on

# status line
set -g status-interval 5
set -g status-style "bg=terminal,fg=color10"
set-option -g status-position bottom
setw -g window-status-format " #[bg=color4 fg=color0 noreverse]▓░ #{window_index} #{window_name} "
setw -g window-status-current-format " #{?window_zoomed_flag,#[bg=color9 fg=color0 noreverse],#[bg=color10 fg=color0 noreverse]}▓░ #{window_index} #{?window_zoomed_flag,ZOOMED ,}#{window_name} "
set -g status-right-length 110
set -g status-right '#(~/.local/bin/tmux-status)'
set -g status-left '#{tmux_mode_indicator} #{session_name}'

set -g @plugin 'tmux-plugins/tpm'

# status icon
set -g @plugin 'MunifTanjim/tmux-mode-indicator'
set -g @mode_indicator_empty_prompt ' ◇ '
set -g @mode_indicator_empty_mode_style 'bg=term,fg=color2'
set -g @mode_indicator_prefix_prompt ' ◈ '
set -g @mode_indicator_prefix_mode_style 'bg=color2,fg=color0'
set -g @mode_indicator_copy_prompt '  '
set -g @mode_indicator_copy_mode_style 'bg=color3,fg=color0'
set -g @mode_indicator_sync_prompt ' 󰓦 '
set -g @mode_indicator_sync_mode_style 'bg=color1,fg=color0'

set -g @plugin 'tmux-plugins/tmux-resurrect'

set -g @plugin 'tmux-plugins/tmux-continuum' # in order to be executed periodically, the plugin updates the status-right tmux variable. In case some plugin (usually themes) overwrites the status-right variable, the autosave feature stops working. To fix this issue, place the plugin last in the TPM plugins list.
set -g @continuum-restore 'on'

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

run -b '~/.tmux/plugins/tpm/tpm'

